{"version":3,"sources":["components/RenderDatabase.js","images/CompletedTick.svg","images/DownloadIcon.svg","components/DownloadDeleteDialog.js","apis/suggestSearch.js","components/header/AutoSearchResult.js","components/header/SearchBox.js","components/header/SimpleAppBar.js","components/player/PlayPauseButton.js","components/player/NextButton.js","components/player/PreviousButton.js","images/dottedCircle.svg","components/player/MusicArt.js","components/player/SleepTimer.js","components/player/TimelineController.js","components/player/VolumeController.js","components/RelatedVideos.js","components/player/TopBar.js","components/player/MiniMusicArt.js","external/saveCountry.js","components/player/MainPlayer.js","components/CurrentSection.js","images/moon-solid.svg","images/sun-solid.svg","components/SwipeMenu.js","components/sections/SettingsPage.js","components/AppContainer.js","components/App.js","serviceWorker.js","index.js","components/GlobalState.js","external/saveSong.js","apis/youtubeSearch.js","apis/getAudioLink.js"],"names":["currentId","DownloadDeleteDialog","isOpen","handleCancel","handleDelete","useState","checkBox","setCheckBox","React","useEffect","Dialog","style","zIndex","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","FormControlLabel","control","Checkbox","color","checked","onChange","e","target","value","label","DialogActions","Button","onClick","useSongMethods","songId","useContext","GlobalContext","dispatch","setSnackbarMsg","useCallback","data","type","snippet","deleteDialogState","setDeleteDialogState","dontAskPopup","setDontAskPopup","popupLocalState","localStorage","getItem","handleDownload","a","getAudioLink","get","params","res","downloadSong","deleteTheSong","deleteSongAudio","setItem","deleteDialogComponent","handleRemoveSong","RenderDatabase","props","songs","window","innerHeight","setWindowHeight","handleClick","song","videoId","audio","thumbnail","title","channelTitle","maxThumbnail","sdThumbnail","returnAnimatedClass","downloadState","renderResult","map","index","ListItem","alignItems","button","ListItemAvatar","Avatar","className","width","height","marginRight","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","CompletedTick","DownloadIcon","renderItem","forwardRef","row","ref","maxWidth","left","transform","Divider","itemCount","length","innerWidth","baseURL","hl","ds","client","AutoSearchResult","results","onSearchSelect","result","ListItemIcon","paddingLeft","Search","List","withRouter","history","location","URLSearchParams","search","searchState","setSearchState","setSearchResult","searchQuery","setSearchQuery","autoSearchData","setAutoSearch","ytSearchQuery","setYtSearchQuery","isPopperOpen","setPopper","push","pathname","getAutocomplete","suggestSearch","q","jsonp","queryParams","queryStr","param","slice","getQueryString","err","response","youtubeSearch","maxResults","items","searchYt","query","IconButton","goBack","aria-label","ArrowBack","onSubmit","preventDefault","lastChild","blur","onSearchSubmit","InputBase","fullWidth","placeholder","autoFocus","event","func","timeId","delay","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","Popper","anchorEl","document","getElementById","popperOptions","modifiers","preventOverflow","padding","placement","Grid","container","justify","CircularProgress","styles","root","flexGrow","textAlign","input","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","changeAppBar","path","listen","AppBar","position","Toolbar","Menu","PlayPauseButton","player","audioState","minimized","size","pause","play","stopPropagation","disableFocusRipple","disableRipple","Pause","fontSize","opacity","PauseCircleFilled","PlayArrow","PlayCircleFilled","onPlayNext","SkipNext","playPrevious","SkipPrevious","latestTouchTap","time","timerTimeout","MusicArt","rating","audioEl","swipeUpHandler","useSwipeable","onSwipedUp","dislikeSong","heartStyle","setHeartStyle","artContainerStyle","background","circleSvg","likeSong","rateSong","marginTop","touchTap","Date","getTime","currentTarget","isFastDblTouchTap","isDblTouchTap","motion","div","drag","dragElastic","dragTransition","bounceStiffness","bounceDamping","dragConstraints","right","top","bottom","FavoriteTwoTone","boxShadow","URL","createObjectURL","imgProps","onLoad","naturalWidth","checkImg","align","re","RegExp","replace","shortTitle","PrettoSlider","withStyles","thumb","marginLeft","content","borderRadius","border","track","rail","Slider","MiniSlider","display","formatTime","secs","minutes","Math","floor","seconds","ceil","TimelineController","currentTime","setCurrentTime","setTimeInterval","setInterval","clearInterval","max","duration","margin","newValue","VolumeController","setPlayerState","volume","setVolume","spacing","item","VolumeUp","xs","newVal","SleepTimer","sliderValue","changeSliderValue","setOpen","checkbox","setCheckbox","isTimerSet","setIsTimerSet","setTimer","sleepTimerObj","sleepTimerSettings","JSON","parse","getSleepTimeFromLocalStoarge","alwaysOn","Timer","TimerOff","stepSize","gradientColorFrom","gradientColorTo","knobRadius","progressWidth","circleWidth","Switch","labelPlacement","removeItem","stringify","setSleepTimeToLocalStorage","DownloadLoader","LinearProgress","TopBar","snackbarMsg","isSongDownloaded","setSongDownloaded","isSongDownloading","setSongDownloading","Reply","navigator","share","text","url","href","then","console","log","catch","error","DoneOutline","GetApp","ExpandMore","MiniMuiscArt","playPause","playNext","emptyPlayer","Close","RelatedVideos","toggleMaxPlaylist","setPlaylist","playerState","relatedVideos","setRelatedVideos","setIsRepeatOn","isRepeatOn","spring","damping","stiffness","video","li","positionTransition","MusicVideo","LibraryMusic","Shuffle","arry","reduce","acc","_","i","rnd","random","temp","RepeatOne","Repeat","KeyboardArrowDown","KeyboardArrowUp","dense","country_code","axios","mode","country","fetchCountry","relatedVideosVar","previousLocation","MainPlayer","currentVideoSnippet","themeSelectValue","setCurrentVideoSnippet","isItFromPlaylist","setIsItFromPlaylist","setAudioState","setMinimized","setRating","isNextFromMini","setIsNextFromMini","body","querySelector","audioPlayer","useRef","current","setupMediaSessions","mediaSession","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","playAudio","getAudio","searchRelated","relatedToVideoId","setAudioSrcAndPlay","setVideoSnippet","hidden","currentIndex","findIndex","playerStyle","transition","overflow","expandPlayer","state","modal","updateSongDB","updatePlayingSong","initPosition","containerRef","swipeHandlerMaximized","onSwipedDown","onSwiping","changedTouches","screenY","positionDifference","round","containerRefStyle","onSwiped","onSwipedRight","playTimeout","onSwipedLeft","swipeHandlerMin","fetchAndSetCurrentVideoSnippet","action","justifyContent","PreviousButton","NextButton","returnMaximizedPlayer","MiniMusicArt","returnMinimizedPlayer","onLoadStart","onLoadedData","onPlay","onPlaying","onPause","onEnded","autoPlay","SwipeMenu","menuOpen","setMenuOpen","setThemeSelectValue","isNight","setIsNight","changeTheme","theme","SwipeableDrawer","onOpen","AnimatePresence","img","initial","scale","animate","rotate","exit","sun","moon","Link","to","Settings","Feedback","FreeBreakfast","People","MaterialLink","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Info","SettingsPage","selectComp","Box","m","Select","displayEmpty","name","MenuItem","Container","gutterBottom","FormControl","FormGroup","LoginPage","lazy","SearchResult","HomePage","FeedbackForm","PrivacyPage","DonatePage","ContributorsPage","CustomTab","indicator","labelIcon","Tabs","CustomTabs","selected","Tab","deferredPrompt","undefined","addEventListener","searchResult","songsHistoryState","setSongsHistory","songsLikedState","setSongsLiked","songsDownloadedState","setSongsDownloaded","tabValue","setTabValue","updateCount","setUpdateCount","redirectState","setRedirectState","circularLoader","fetchSongs","getLikedSongs","getDownloadedSongs","getHistory","db","on","c","removeDownloadingState","continueToHome","prompt","userChoice","choiceResult","outcome","fallback","exact","render","videos","key","returnMainPlayer","indicatorColor","textColor","icon","Home","Favorite","History","defaultTheme","palette","pink","main","typography","useNextVariants","darkTheme","muiDarkTheme","createMuiTheme","muiDefaultTheme","AppContainer","checkDarkMode","selectedTheme","matchMedia","matches","hrs","getHours","useCheckDarkmode","userAgent","match","overscrollBehavior","classList","add","remove","CurrentSection","App","GlobalState","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","process","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","createContext","initialState","reducer","globalState","useReducer","Provider","Dexie","version","stores","videoObj","timestamp","now","playbackTimes","update","orderBy","limit","reverse","toArray","songsByTimeStamp","where","between","minKey","maxKey","likedSongs","downloadedSongs","modify","x","thumbURL","Promise","all","fetchProxiedBlob","thumbnailBlob","songBlob","resolve","reject","xhr","XMLHttpRequest","responseType","onload","statusText","send","abort","create","part","videoCategoryId","keys","split","selectRandomKey"],"mappings":"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","file":"static/js/main.71de7e5c.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n// import {\n//   List,\n//   AutoSizer,\n//   CellMeasurer,\n//   CellMeasurerCache\n// } from \"react-virtualized\";\n\nimport { DynamicSizeList as List } from 'react-window-dynamic';\n\nimport CompletedTick from '../images/CompletedTick.svg';\nimport DownloadIcon from '../images/DownloadIcon.svg';\n\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText,\n} from '@material-ui/core';\n\nimport DownloadDeleteDialog from './DownloadDeleteDialog';\n\nimport { GlobalContext } from './GlobalState';\n\nimport getAudioLink from '../apis/getAudioLink';\nimport { downloadSong, deleteSongAudio } from '../external/saveSong';\n\n// const cache = new CellMeasurerCache({\n//   minHeight: 50,\n//   defaultHeight: 60,\n//   fixedWidth: true\n//   // keyMapper: () => 1\n// });\n\nlet currentId;\n\nexport const useSongMethods = (songId) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n\n  const setSnackbarMsg = React.useCallback(\n    (data) => {\n      dispatch({ type: 'setSnackbarMsg', snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [dontAskPopup, setDontAskPopup] = useState(null);\n\n  useEffect(() => {\n    //convert string to bool\n    const popupLocalState = localStorage.getItem('dontAskPopup') === 'true';\n    setDontAskPopup(popupLocalState);\n    // for popup settings\n  }, []);\n\n  const handleDownload = async (songId) => {\n    // // console.log(\"here is the id\", songId);\n    const res = await getAudioLink.get('/song', {\n      params: { id: songId },\n    });\n    // first we will fetch the song link then we will download it\n    // the download song function takes id and the url\n    const status = await downloadSong(songId, res.data);\n    // after the downloading is done we will remove the downloading class\n    // set the snackbar message\n    setSnackbarMsg('Song Downloaded');\n    // console.log(\"song status\", status);\n  };\n\n  const disablePopup = () => {\n    localStorage.setItem('dontAskPopup', true);\n    setDontAskPopup(true);\n  };\n\n  const deleteTheSong = async (checkBox) => {\n    const deleted = await deleteSongAudio(currentId);\n    setDeleteDialogState(false);\n    setSnackbarMsg('Deleted Successfully');\n\n    // console.log(currentId, checkBox);\n    // we will set it to localstorage the popup option\n    if (checkBox) {\n      disablePopup();\n    }\n  };\n\n  // hadnling download dialog\n  const handleRemoveSong = (songId) => {\n    // console.log(\"handle remove dude\");\n    currentId = songId;\n    // when user clicks on the download badge we will check the state\n    // then delete the song without showing the popup if dontAskPopup is true\n    // and delete the song by calling deleteTheSong\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\n  };\n\n  const deleteDialogComponent = dontAskPopup ? null : (\n    <DownloadDeleteDialog\n      isOpen={deleteDialogState}\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\n    />\n  );\n\n  return {\n    handleDownload,\n    handleRemoveSong,\n    deleteTheSong,\n    dontAskPopup,\n    setDeleteDialogState,\n    deleteDialogState,\n    deleteDialogComponent,\n  };\n};\n\nconst RenderDatabase = (props) => {\n  const songs = props.songs;\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = (data) => {\n    dispatch({ type: 'setCurrentVideoSnippet', snippet: data });\n  };\n  const setSnackbarMsg = (data) => {\n    dispatch({ type: 'setSnakbarMsg', snippet: data });\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const handleClick = (song) => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: song.videoId,\n      audio: song.audio,\n      thumbnail: song.thumbnail,\n      title: song.title,\n      channelTitle: song.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`,\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent,\n  } = useSongMethods();\n\n  const returnAnimatedClass = (song) => {\n    if (song.downloadState === 'downloading') {\n      // console.log(song.downloadState);\n      return 'downloading-animation';\n    } else {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n  });\n\n  const renderResult = songs.map((song, index) => {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(song)}\n          // component={Link}\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: '60px', height: '60px', marginRight: '15px' }}\n              alt={song.title}\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\n            />\n          </ListItemAvatar>\n          {/* we will play the song when clicked on title */}\n          <ListItemText\n            primary={song.title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {song.channelTitle}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <div\n          className=\"download-container\"\n          onClick={() =>\n            song.audio\n              ? handleRemoveSong(song.videoId)\n              : handleDownload(song.videoId)\n          }\n        >\n          <div className=\"badge-container\">\n            {/* if there is audio file then we will show tick mark icon */}\n            <img\n              className={returnAnimatedClass(song)}\n              src={song.audio ? CompletedTick : DownloadIcon}\n              alt=\"downloading icon\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  const renderItem = React.forwardRef((row, ref) => (\n    <div\n      ref={ref}\n      style={{\n        ...row.style,\n        maxWidth: '1000px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n      }}\n    >\n      {renderResult[row.index]}\n      <Divider />\n    </div>\n  ));\n  return (\n    <>\n      {deleteDialogComponent}\n\n      <List\n        height={window.innerHeight - 100}\n        itemCount={songs.length}\n        width={window.innerWidth}\n      >\n        {renderItem}\n      </List>\n    </>\n  );\n};\n\nexport default RenderDatabase;\n","export default __webpack_public_path__ + \"static/media/CompletedTick.997be658.svg\";","export default __webpack_public_path__ + \"static/media/DownloadIcon.99d55e74.svg\";","import React, { useState } from 'react';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DownloadDeleteDialog = ({ isOpen, handleCancel, handleDelete }) => {\n  const [checkBox, setCheckBox] = useState(false);\n\n  React.useEffect(() => {\n    // console.log(checkBox);\n  }, [checkBox]);\n\n  return (\n    <div>\n      <Dialog\n        style={{ zIndex: 1500 }}\n        open={isOpen}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {'Delete this song from your device ?'}\n        </DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={checkBox}\n                onChange={(e) => setCheckBox(e.target.checked)}\n                value=\"checkBox\"\n              />\n            }\n            label=\"Don't ask again\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleDelete(checkBox)} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DownloadDeleteDialog;\n","export default {\n  baseURL: \"https://suggestqueries.google.com/complete/search?\",\n  params: {\n    hl: \"en\", // Language\n    ds: \"yt\", // Restrict lookup to youtube\n    client: \"youtube\" // force youtube style response, i.e. jsonp\n  }\n};\n","import React from \"react\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst AutoSearchResult = ({ results, onSearchSelect }) => {\n  let renderResult = [];\n  if (results) {\n    renderResult = results.map((result, index) => {\n      return (\n        <ListItem key={index} onClick={() => onSearchSelect(result[0])} button>\n          <ListItemIcon style={{ paddingLeft: \"16px\" }}>\n            <Search />\n          </ListItemIcon>\n          <ListItemText primary={result[0]} />\n        </ListItem>\n      );\n    });\n  }\n  return <List>{renderResult}</List>;\n};\n\nexport default AutoSearchResult;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  InputBase,\n  IconButton,\n  Popper,\n  CircularProgress,\n  Grid,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\nimport { GlobalContext } from '../GlobalState';\nimport suggestSearch from '../../apis/suggestSearch';\nimport AutoSearchResult from './AutoSearchResult';\nimport youtubeSearch from '../../apis/youtubeSearch';\n\nimport jsonp from 'jsonp';\n\nconst SearchBox = ({ history, location }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setSearchState = useCallback(\n    (data) => {\n      dispatch({ type: 'setSearchState', snippet: data });\n    },\n    [dispatch]\n  );\n\n  const setSearchResult = useCallback(\n    (data) => {\n      // console.log(data);\n      dispatch({ type: 'setSearchResult', snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [autoSearchData, setAutoSearch] = useState('');\n\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\n\n  // toggle popper\n  const [isPopperOpen, setPopper] = useState(true);\n\n  // console.log('search box re rendered');\n\n  // get back the selected search data\n  const onSearchSelect = (result) => {\n    setSearchQuery(result);\n    setYtSearchQuery(result);\n    setSearchState('searching');\n    history.push({ pathname: '/search', search: `?q=${result}` });\n  };\n\n  // when user hits enter then also fetch the data from yt api\n  const onSearchSubmit = (e) => {\n    e.preventDefault();\n    // console.log(e.target.lastChild);\n    e.target.lastChild.lastChild.blur();\n    setSearchState('searching');\n    setYtSearchQuery(searchQuery);\n    history.push({ pathname: '/search', search: `?q=${searchQuery}` });\n  };\n\n  const debounce = (func, delay = 150) => {\n    let timeId;\n    return function () {\n      let context = this,\n        args = arguments;\n      clearTimeout(timeId);\n      timeId = setTimeout(() => {\n        func.apply(context, args);\n      }, delay);\n    };\n  };\n\n  const getQueryString = (queryParams) => {\n    let queryStr = '';\n    for (let param in queryParams)\n      queryStr += `${param}=${queryParams[param]}&`;\n\n    // remove the last &\n    return queryStr.slice(0, -1);\n  };\n\n  // for controlled input change\n  const onChange = (event) => {\n    setSearchQuery(event.target.value);\n    debounce((e) => {\n      getAutocomplete();\n    })(event);\n  };\n\n  // get autocomplete data form api\n  const getAutocomplete = () => {\n    suggestSearch.params.q = searchQuery;\n    jsonp(\n      suggestSearch.baseURL + getQueryString(suggestSearch.params),\n      null,\n      (err, response) => {\n        setAutoSearch(response[1]);\n      }\n    );\n  };\n\n  // get youtube search result from api\n  useEffect(() => {\n    const searchYt = async (data) => {\n      const res = await youtubeSearch.get('/search', {\n        params: {\n          q: data,\n          maxResults: 15,\n        },\n      });\n      setSearchResult(res.data.items);\n      setSearchState('completed');\n    };\n    // only search if there is any value\n    if (ytSearchQuery && ytSearchQuery !== '') {\n      searchYt(ytSearchQuery);\n    }\n    // // console.log(ytSearchQuery);\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\n\n  useEffect(() => {\n    // console.log('search state', searchState);\n  }, [searchState]);\n\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const query = params.get('q');\n    if (query) {\n      setYtSearchQuery(query);\n      setSearchQuery(query);\n      setSearchState('searching');\n      // console.log('changing query to', query);\n    }\n\n    // const unlisten = history.listen(location => {\n    //   // setYtSearchQuery(params.get(\"q\"));\n    //   // we will se the q from params\n    //   // location is an object like window.location\n    //   const path = location.pathname;\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\n    //   //   setSearchState(\"searched\");\n    //   // } else {\n    //   //   setSearchState(\"home\");\n    //   // }\n    // });\n  }, [setSearchState, setYtSearchQuery]);\n\n  // show loading icon while we fetch the results from api\n\n  const popperResult = () => {\n    switch (searchState) {\n      case 'searching':\n        return (\n          <Grid\n            style={{ height: '100vh' }}\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        );\n      case 'clicked':\n        return (\n          <AutoSearchResult\n            results={autoSearchData}\n            onSearchSelect={onSearchSelect}\n          />\n        );\n      case 'completed':\n        setPopper(false);\n        break;\n      default:\n        break;\n    }\n    // console.log('Function ran');\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          setSearchState('home');\n          if (history.location.pathname === '/search') {\n            history.goBack();\n          }\n          // only go back if u have searched something\n        }}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <ArrowBack />\n      </IconButton>\n      <form style={{ width: '100%' }} onSubmit={(e) => onSearchSubmit(e)}>\n        <InputBase\n          fullWidth\n          placeholder=\"Search...\"\n          autoFocus\n          style={{ color: '#fff', paddingLeft: '16px' }}\n          value={searchQuery}\n          onChange={onChange}\n          // on click we will show popper\n          onClick={() => {\n            setSearchState('clicked');\n            setPopper(true);\n          }}\n        />\n      </form>\n\n      <Popper\n        className=\"searchPopper\"\n        open={isPopperOpen}\n        anchorEl={document.getElementById('navbar')}\n        popperOptions={{\n          modifiers: {\n            preventOverflow: {\n              padding: 0,\n            },\n          },\n        }}\n        placement=\"bottom\"\n      >\n        {popperResult}\n      </Popper>\n    </>\n  );\n};\n\nexport default withRouter(SearchBox);\n","import React, { useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from '../GlobalState';\n\nimport SearchBox from './SearchBox';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Slide,\n} from '@material-ui/core/';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nimport { Menu, Search } from '@material-ui/icons/';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: 'center',\n    width: 'calc(100% - 96px)',\n  },\n  input: {\n    color: '#fff',\n  },\n};\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nfunction SimpleAppBar(props) {\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = (data) => {\n    // console.log(data);\n    dispatch({ type: 'setMenuOpen', snippet: data });\n  };\n  const setSearchState = React.useCallback(\n    (data) => {\n      // console.log(data);\n      dispatch({ type: 'setSearchState', snippet: data });\n    },\n    [dispatch]\n  );\n\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n      if (path === '/search') {\n        setSearchState('searching');\n      } else {\n        setSearchState('home');\n      }\n      // console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar();\n    const unlisten = props.history.listen((location) => {\n      changeAppBar();\n    });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === 'home') {\n      return (\n        <>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setMenuOpen(true)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.title}>\n            Ylight Music\n          </Typography>\n          <IconButton\n            onClick={() => setSearchState('clicked')}\n            color=\"inherit\"\n            aria-label=\"Search\"\n          >\n            <Search />\n          </IconButton>\n        </>\n      );\n    } else {\n      return <SearchBox />;\n    }\n  };\n\n  return (\n    <>\n      <HideOnScroll {...props}>\n        <AppBar id=\"navbar\" position=\"sticky\">\n          <Toolbar>{toggleSearch()}</Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n\nexport default withRouter(SimpleAppBar);\n","import React, { useState } from \"react\";\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\nimport {\n  PauseCircleFilled,\n  PlayCircleFilled,\n  Pause,\n  PlayArrow\n} from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\n  const togglePlayPause = e => {\n    if (audioState === \"playing\") {\n      player.pause();\n    } else if (audioState === \"paused\") {\n      player.play();\n    }\n    e.stopPropagation();\n  };\n\n  const showPlayPause = () => {\n    if (audioState === \"playing\") {\n      // if the state will be minimized then we will return the nromal pause button\n      if (minimized) {\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\n      if (minimized) {\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"loading\") {\n      return <CircularProgress />;\n    }\n  };\n\n  return (\n    <IconButton\n      size=\"small\"\n      color={minimized ? \"secondary\" : \"primary\"}\n      aria-label=\"Pause\"\n      onClick={togglePlayPause}\n      disableFocusRipple={true}\n      disableRipple={true}\n    >\n      {showPlayPause()}\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton;\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipNext } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({onPlayNext}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Next\" onClick={onPlayNext}>\n      <SkipNext fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipPrevious } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({playPrevious}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Pause\" onClick={playPrevious}>\n      <SkipPrevious fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","export default __webpack_public_path__ + \"static/media/dottedCircle.f3b8707d.svg\";","import React, { useState, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { motion } from \"framer-motion\";\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport { FavoriteTwoTone } from \"@material-ui/icons\";\nimport circleSvg from \"../../images/dottedCircle.svg\";\nimport { rateSong } from \"../../external/saveSong\";\n\nconst dblTouchTapMaxDelay = 300;\nlet latestTouchTap = {\n  time: 0,\n  target: null\n};\n\nfunction isDblTouchTap(event) {\n  const touchTap = {\n    time: new Date().getTime(),\n    target: event.currentTarget\n  };\n  const isFastDblTouchTap =\n    touchTap.target === latestTouchTap.target &&\n    touchTap.time - latestTouchTap.time < dblTouchTapMaxDelay;\n  latestTouchTap = touchTap;\n  return isFastDblTouchTap;\n}\n\nlet initialPosition;\n\nconst MusicArt = ({ data, rating, audioEl }) => {\n  const swipeUpHandler = useSwipeable({\n    onSwipedUp: e => {\n      dislikeSong();\n    }\n  });\n\n  const [heartStyle, setHeartStyle] = useState({\n    transform: \"scale(0)\"\n  });\n  // const [artContainerStyle, setArtContainerStyle] = useState({\n  //   background: `url(${circleSvg}) no-repeat`,\n  //   padding: \"18px\",\n  //   position: \"relative\",\n  //   // transition: \"transform 100ms\",\n  //   // transform: \"translateY(0)\"\n  // });\n\n  const artContainerStyle = {\n    background: `url(${circleSvg}) no-repeat`,\n    padding: \"18px\",\n    position: \"relative\",\n    zIndex: \"1\"\n  };\n\n  // if its less than 400 width we will use default hq thumbnail\n  const checkImg = e => {\n    if (e.target.naturalWidth < 400) {\n      e.target.src = data.sdThumbnail;\n    }\n  };\n\n  // double tap to like the song\n  const likeSong = useCallback(() => {\n    // run the like function to like provided with song id and rating\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\" });\n    }, 300);\n  }, [setHeartStyle]);\n\n  const dislikeSong = useCallback(() => {\n    rateSong(data.id, \"disliked\");\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\", color: \"#2d3436\" });\n    }, 300);\n  }, [setHeartStyle, data.id]);\n\n  React.useEffect(() => {\n    if (rating === \"liked\") {\n      likeSong();\n    } else if (rating === \"disliked\") {\n      dislikeSong();\n    } else {\n      setHeartStyle({ transform: \"scale(0)\" });\n    }\n  }, [rating, likeSong, dislikeSong, setHeartStyle]);\n\n  // if we find the channel name is before the song title we will remove it\n  //using the regex\n  const shortTitle = data => {\n    // this regex is to remove channel name from song title\n    const re = new RegExp(data.channelTitle + \" - | : \", \"g\");\n\n    return data.title.replace(re, \"\");\n  };\n\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.maxThumbnail;\n    }\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: \"40px\" }}\n      onClick={e => {\n        if (isDblTouchTap(e)) {\n          likeSong();\n          rateSong(data.id, \"liked\", audioEl);\n        }\n        // call the like song function on double tap\n      }}\n    >\n      <motion.div\n        className=\"box\"\n        drag\n        dragElastic={true}\n        dragTransition={{ bounceStiffness: 100, bounceDamping: 10 }}\n        dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n        style={artContainerStyle}\n        {...swipeUpHandler}\n      >\n        <FavoriteTwoTone className={\"songHeart left\"} style={heartStyle} />\n        <FavoriteTwoTone className={\"songHeart right\"} style={heartStyle} />\n        <Avatar\n          className=\"searchThumb\"\n          style={{\n            width: \"215px\",\n            height: \"215px\",\n            boxShadow: \"#0000008c 1px 3px 8px\"\n          }}\n          alt=\"video thumbnail\"\n          src={getThumbnail()}\n          imgProps={{ onLoad: e => checkImg(e) }}\n        />\n      </motion.div>\n      <br />\n      <Typography color=\"primary\" variant=\"h5\" className=\"musicArtTitle\" align=\"center\">\n        {shortTitle(data)}\n      </Typography>\n      <Typography color=\"primary\" variant=\"subtitle1\">\n        {data.channelTitle}\n      </Typography>\n      <br />\n    </Grid>\n  );\n};\n\nexport default MusicArt;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Dialog,\n  Switch,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  FormControl,\n  DialogTitle,\n  Typography,\n} from '@material-ui/core';\nimport { TimerOff, Timer } from '@material-ui/icons';\nimport { CircleSlider } from 'react-circle-slider';\n\nimport './SleepTimerStyle.css';\n\nconst setSleepTimeToLocalStorage = (time, alwaysOn) => {\n  const sleepTimerSettings = JSON.stringify({ time: time, alwaysOn: alwaysOn });\n\n  localStorage.setItem('sleepTimerSettings', sleepTimerSettings);\n};\n\nconst getSleepTimeFromLocalStoarge = () => {\n  const sleepTimerSettings = localStorage.getItem('sleepTimerSettings');\n  return JSON.parse(sleepTimerSettings);\n};\n\nconst removeSleepTimer = () => {\n  localStorage.removeItem('sleepTimerSettings');\n};\n\nlet timerTimeout;\n\nfunction SleepTimer({ player }) {\n  const [sliderValue, changeSliderValue] = useState(20);\n  const [open, setOpen] = useState(false);\n  const [checkbox, setCheckbox] = useState(false);\n  const [isTimerSet, setIsTimerSet] = useState(false);\n\n  const setTimer = (time) => {\n    // console.log(\"timer has been set with time\", time);\n    clearTimeout(timerTimeout);\n    setIsTimerSet(true);\n    timerTimeout = setTimeout(() => {\n      player.pause(); //pause after music finished\n    }, time * 60 * 1000);\n  };\n\n  useEffect(() => {\n    const sleepTimerObj = getSleepTimeFromLocalStoarge();\n    if (sleepTimerObj) {\n      changeSliderValue(sleepTimerObj.time);\n      setCheckbox(sleepTimerObj.alwaysOn);\n    }\n\n    //only set timer when there is no timer\n    if (sleepTimerObj && sleepTimerObj.alwaysOn) {\n      // console.log(sleepTimerObj);\n      setTimer(sleepTimerObj.time);\n    }\n    // console.log(sleepTimerObj);\n  }, []);\n\n  const handleSetTimer = () => {\n    setSleepTimeToLocalStorage(sliderValue, checkbox);\n    //   then also set a set timeout\n    // if there is any timer already clear it\n    setOpen(false);\n    setTimer(sliderValue);\n  };\n\n  const handleRemove = () => {\n    removeSleepTimer();\n    setIsTimerSet(false);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {isTimerSet ? (\n        <Timer color=\"primary\" onClick={() => setOpen(true)} />\n      ) : (\n        <TimerOff color=\"primary\" onClick={() => setOpen(true)} />\n      )}\n      <Dialog\n        style={{ zIndex: 1400 }}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"primary\"\n          align=\"center\"\n          style={{ marginTop: '10px' }}\n        >\n          Pause Music After\n        </Typography>\n        <div className=\"container\">\n          <div className=\"textContainer\">\n            {sliderValue}\n            <div className=\"minute\">MINUTES</div>\n          </div>\n          <CircleSlider\n            value={sliderValue}\n            stepSize={5}\n            onChange={(value) => changeSliderValue(value)}\n            size={300}\n            max={120}\n            gradientColorFrom=\"#ec008c\"\n            gradientColorTo=\"#fc6767\"\n            knobRadius={25}\n            progressWidth={30}\n            circleWidth={30}\n          />\n        </div>\n\n        <DialogActions>\n          <FormControlLabel\n            value=\"Always On\"\n            control={\n              <Switch\n                checked={checkbox}\n                onChange={(e) => setCheckbox(e.target.checked)}\n                value=\"checked always on\"\n                color=\"primary\"\n              />\n            }\n            label=\"ALWAYS\"\n            labelPlacement=\"end\"\n            style={{ color: '#e91e63' }}\n          />\n          <Button color=\"primary\" onClick={handleRemove}>\n            Remove\n          </Button>\n\n          <Button color=\"primary\" onClick={handleSetTimer}>\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default SleepTimer;\n","import React, { useState, useEffect } from 'react';\nimport { withStyles, Typography, Grid, Slider } from '@material-ui/core/';\nimport { PauseCircleFilled } from '@material-ui/icons/';\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 6,\n  },\n  thumb: {\n    height: 16,\n    width: 16,\n    marginTop: -5.3,\n    marginLeft: -8,\n    '&::before': {\n      content: \"''\",\n      height: 'inherit',\n      width: 'inherit',\n      position: 'absolute',\n      transform: 'scale(1.6)',\n      borderRadius: '50px',\n      border: '1px solid',\n    },\n  },\n  track: {\n    height: 6,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 6,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst MiniSlider = withStyles({\n  root: {\n    height: 4,\n    position: 'relative',\n    bottom: '16px',\n    color: '#FFFDFD',\n    padding: 0,\n  },\n  thumb: {\n    display: 'none',\n  },\n  track: {\n    height: 4,\n    borderRadius: 0,\n  },\n  rail: {\n    height: 4,\n    borderRadius: 0,\n  },\n})(Slider);\n\nconst formatTime = (secs) => {\n  let minutes = Math.floor(secs / 60);\n  let seconds = Math.ceil(secs - minutes * 60);\n\n  if (seconds < 10) seconds = `0${seconds}`;\n\n  return `${minutes}:${seconds}`;\n};\n\nconst TimelineController = ({ audioState, player, minimized }) => {\n  const [value, setValue] = useState(50);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    if (player) {\n      setCurrentTime(player.currentTime);\n    }\n    // we will update the time of player every 800ms\n    let setTimeInterval;\n    if (audioState === 'playing') {\n      setTimeInterval = setInterval(() => {\n        setCurrentTime(player.currentTime);\n        // console.log()\n      }, 800);\n    } else {\n      clearInterval(setTimeInterval);\n    }\n    return () => clearInterval(setTimeInterval);\n  }, [audioState, player]);\n\n  const handleChange = (event, newValue) => {\n    player.currentTime = newValue;\n    setCurrentTime(newValue);\n  };\n\n  const showDuration = () => {\n    if (player) {\n      if (player.duration) {\n        return formatTime(player.duration);\n      } else {\n        return '0:00';\n      }\n    } else {\n      return 0;\n    }\n  };\n\n  // condition rendering\n  if (minimized) {\n    return (\n      <MiniSlider value={currentTime} max={player ? player.duration : 0} />\n    );\n  } else {\n    return (\n      <div style={{ margin: '0 auto', width: '90%' }}>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Typography variant=\"body1\" color=\"primary\">\n            {formatTime(currentTime)}\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\">\n            {showDuration()}\n          </Typography>\n        </Grid>\n\n        <PrettoSlider\n          value={currentTime}\n          onChange={handleChange}\n          max={player ? player.duration : 0}\n        />\n      </div>\n    );\n  }\n};\n\nexport default TimelineController;\n","import React, { useState } from \"react\";\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\nimport { VolumeUp } from \"@material-ui/icons/\";\n\nconst VolumeController = ({ player, setPlayerState }) => {\n  const [volume, setVolume] = useState(100);\n\n  const volumeChange = (e, newVal) => {\n    setVolume(newVal);\n    player.volume = newVal / 100;\n    //\n  };\n\n\n  return (\n\n      <Grid container spacing={1} style={{ maxWidth: \"200px\" }}>\n        <Grid item>\n          <VolumeUp color=\"primary\" />\n        </Grid>\n        <Grid item xs={3}>\n          <Slider value={volume} onChange={volumeChange} />\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default VolumeController;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  List,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n  Divider,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nimport {\n  MusicVideo,\n  LibraryMusic,\n  Shuffle,\n  Repeat,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  RepeatOne,\n} from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nlet renderResult;\n\n// written by @bushblade\nconst shuffle = (arry) =>\n  arry.reduce(\n    (acc, _, i) => {\n      const rnd = Math.floor(Math.random() * acc.length),\n        temp = acc[i];\n      acc[i] = acc[rnd];\n      acc[rnd] = temp;\n      return acc;\n    },\n    [...arry]\n  );\n\nconst RelatedVideos = ({\n  toggleMaxPlaylist,\n  setPlaylist,\n  playerState,\n  relatedVideos,\n  setRelatedVideos,\n  setIsRepeatOn,\n  isRepeatOn,\n}) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = (data) => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const handleShuffleClick = () => {\n    setRelatedVideos(shuffle(relatedVideos));\n  };\n\n  const spring = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300,\n  };\n  const handleClick = (video) => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`,\n      // this is the url of the max resolution of thumbnail\n    });\n    setPlaylist();\n  };\n\n  if (relatedVideos.length > 1) {\n    renderResult = relatedVideos.map((song) => {\n      return (\n        song.snippet && (\n          <motion.li key={song.id.videoId} positionTransition={spring}>\n            <ListItem\n              // key={song.id.videoId}\n              button\n              onClick={() => handleClick(song)}\n              // component={Link}\n              // replace\n              // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\n            >\n              <ListItemIcon>\n                <MusicVideo style={{ color: \"#fff\" }} />\n              </ListItemIcon>\n              <ListItemText\n                primary={song.snippet.title.slice(0, 40)}\n                secondary={song.snippet.channelTitle.slice(0, 40)}\n              />\n            </ListItem>\n          </motion.li>\n        )\n      );\n    });\n  } else {\n    return <LinearProgress />;\n  }\n\n  const returnPlaylistExpandBtn = () => {\n    if (playerState === \"playlist\") {\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\n    } else {\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\n    }\n  };\n\n  return (\n    <div className=\"RelatedVideoContainer\">\n      <Grid\n        className={\"playlistHeader\"}\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"space-between\"\n      >\n        <LibraryMusic />\n        <Typography variant=\"h6\">Coming Next</Typography>\n        <Shuffle onClick={handleShuffleClick} />\n        {/* this will show the repeat button and repeat the song */}\n        {isRepeatOn ? (\n          <RepeatOne onClick={setIsRepeatOn} />\n        ) : (\n          <Repeat onClick={setIsRepeatOn} />\n        )}\n        {returnPlaylistExpandBtn()}\n      </Grid>\n      <List dense={true}>{renderResult}</List>\n    </div>\n  );\n};\n\nexport default RelatedVideos;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  IconButton,\n  Grid,\n  Slider,\n  LinearProgress,\n  makeStyles,\n  withStyles\n} from \"@material-ui/core/\";\n\nimport {\n  ExpandMore,\n  GetApp,\n  Reply,\n  DoneOutline,\n  Done,\n  AlarmOff\n} from \"@material-ui/icons/\";\nimport VolumeController from \"./VolumeController\";\nimport { useSongMethods } from \"../RenderDatabase\";\nimport { downloadSong } from \"../../external/saveSong\";\nimport SleepTimer from './SleepTimer'\nimport { GlobalContext } from \"../GlobalState\";\n\nconst DownloadLoader = withStyles({\n  root: {\n    height: 2,\n    width: \"70%\",\n    margin: \"0 auto\",\n    transform: \"translateY(-10px)\"\n  }\n})(LinearProgress);\n\nconst TopBar = ({ song, player, setPlayerState, history }) => {\n  const { snackbarMsg } = useContext(GlobalContext);\n  const [isSongDownloaded, setSongDownloaded] = useState(false);\n  const [isSongDownloading, setSongDownloading] = useState(false);\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  useEffect(() => {\n    if (snackbarMsg === \"Song Downloaded\" || song.audio) {\n      setSongDownloaded(true);\n      setSongDownloading(false);\n    }\n  }, [snackbarMsg]);\n  // if the song is downloaded we will change\n\n  // share prompt using chrome web api\n  const shareSong = () => {\n    if (navigator.share) {\n      navigator\n        .share({\n          title: \"Share This Song\",\n          text: `Hey Listen to ${song.title} on Ylight Music`,\n          url: window.location.href //get the current window url\n        })\n        .then(() => console.log(\"Successful share\"))\n        .catch(error => console.log(\"Error sharing\", error));\n    }\n  };\n\n  const minimizePlayer = () => {\n    history.goBack()\n    setPlayerState(\"minimized\");\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      direction=\"row\"\n      style={{\n        padding: \" 0 10px\",\n        marginTop: \"10px\",\n        position: \"absolute\",\n        top: \"0\"\n      }}\n    >\n      <VolumeController player={player} />\n      {deleteDialogComponent}\n      <Reply\n        style={{ transform: \" scaleX(-1) translateY(-2px)\" }}\n        onClick={shareSong}\n        color=\"primary\"\n      />\n      \n      <SleepTimer player={player}/>\n\n      <div>\n        {isSongDownloaded ? (\n          <DoneOutline\n            color=\"primary\"\n            onClick={() => handleRemoveSong(song.id)}\n          /> //song will be removed\n        ) : (\n          <>\n            <GetApp\n              color=\"primary\"\n              onClick={() => {\n                handleDownload(song.id);\n                setSongDownloading(true);\n              }}\n            />\n          </>\n        )}\n        {isSongDownloading ? <DownloadLoader color=\"primary\" /> : null}\n        {/* if the song is downloading we will show loading */}\n      </div>\n\n      <ExpandMore\n        onClick={minimizePlayer}\n        color=\"primary\"\n        fontSize=\"large\"\n        style={{ transform: \"translateY(-7px)\" }}\n      />\n    </Grid>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { SkipNext, Close } from \"@material-ui/icons\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport \"./MiniMusicStyle.css\";\n\nconst styles = {};\n\nconst MiniMuiscArt = ({ playPause, data, playNext, emptyPlayer }) => {\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.sdThumbnail;\n    }\n  };\n\n  return (\n    <div className={\"mainContainer\"}>\n      <div className={\"overflow-hidden\"}>\n        <div className=\"details\">\n          <Typography variant=\"body1\">{data.title}</Typography>\n          <Typography variant=\"body2\">{data.channelTitle}</Typography>\n        </div>\n        <div className=\"buttons\">\n          <SkipNext onClick={playNext} />\n          <Close onClick={emptyPlayer} />\n        </div>\n        <div className={\"miniArtContainer\"}>\n          <div className={\"mainArt\"}>\n            <img\n              className={\"miniArtImg\"}\n              src={getThumbnail()}\n              alt=\"music art\"\n            />\n            <PlayPauseButton\n              player={playPause.player}\n              minimized={playPause.minimized}\n              audioState={playPause.audioState}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MiniMuiscArt;\n","import axios from \"axios\";\n\nconst country_code = localStorage.getItem(\"country_code\");\n\n// const key = \"02924c9a5a777f4d4854a45a326432c6\";\n\nconst GeoAPI = \"https://ipapi.co/json/\";\n\nconst fetchCountry = async () => {\n  const res = await axios.get(GeoAPI, { mode: \"no-cors\" });\n  //   set the current country code in local stoarge\n  localStorage.setItem(\"country_code\", res.data.country);\n};\n\nif (!country_code) {\n  // if country is not set then only set it\n  fetchCountry();\n}\n","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useSwipeable } from 'react-swipeable';\nimport PlayPauseButton from './PlayPauseButton';\nimport NextButton from './NextButton';\nimport PreviousButton from './PreviousButton';\nimport MusicArt from './MusicArt';\nimport TimelineController from './TimelineController';\nimport TopBar from './TopBar';\nimport MiniMusicArt from './MiniMusicArt';\nimport RelatedVideos from '../RelatedVideos';\nimport getAudioLink from '../../apis/getAudioLink';\nimport youtubeSearch from '../../apis/youtubeSearch';\nimport { updatePlayingSong } from '../../external/saveSong';\n\nimport '../../external/saveCountry';\n\nimport '../../style.css';\n\nimport { GlobalContext } from '../GlobalState';\n\n// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nlet relatedVideosVar;\n\nconst MainPlayer = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ currentVideoSnippet, themeSelectValue }, dispatch] = useContext(\n    GlobalContext\n  );\n\n  const setCurrentVideoSnippet = (data) => {\n    dispatch({ type: 'setCurrentVideoSnippet', snippet: data });\n  };\n\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [isItFromPlaylist, setIsItFromPlaylist] = useState(false);\n  //\n  const [audioState, setAudioState] = useState(null);\n  // there will be 4 states\n  // loading, loaded, playing, paused\n\n  const [playerState, setPlayerState] = useState(null);\n  // there will be 3 states\n  // maximized, minimized, playlist\n\n  const [minimized, setMinimized] = useState(true);\n  const [isRepeatOn, setIsRepeatOn] = useState(false);\n  const [rating, setRating] = useState('none');\n  const [isNextFromMini, setIsNextFromMini] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const body = document.querySelector('body');\n\n  const audioPlayer = useRef();\n  const player = audioPlayer.current;\n  const setupMediaSessions = () => {\n    if ('mediaSession' in navigator) {\n      // console.log(\"navigator setupped\");\n\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: currentVideoSnippet.title,\n        artist: currentVideoSnippet.channelTitle,\n        artwork: [\n          {\n            src: currentVideoSnippet.sdThumbnail,\n            sizes: '512x512',\n            type: 'image/png',\n          },\n        ],\n      });\n      navigator.mediaSession.setActionHandler('play', () => {\n        /* Code excerpted. */\n        playAudio();\n      });\n      navigator.mediaSession.setActionHandler('pause', () => {\n        /* Code excerpted. */\n        audioPlayer.current.pause();\n      });\n      navigator.mediaSession.setActionHandler('previoustrack', () => {\n        playPrevious();\n      });\n      navigator.mediaSession.setActionHandler('nexttrack', () => {\n        playNext();\n      });\n    }\n  };\n\n  const playAudio = () => {\n    audioPlayer.current\n      .play()\n      .then((_) => {\n        // Automatic playback started!\n        // Show playing UI.\n        // console.log(\"audio played auto\");\n        setupMediaSessions();\n      })\n      .catch((error) => {\n        // Auto-play was prevented\n        // Show paused UI.\n        // console.log(\"playback prevented\");\n        setAudioState('paused');\n      });\n  };\n\n  useEffect(() => {\n    // console.log(\"state changed triggedred\");\n    const getAudio = async (data) => {\n      // audioPlayer.current.src = \"\";\n      // maximize the player every time id changes\n      // only if playlist is not open\n      if (playerState !== 'playlist' && !isNextFromMini) {\n        setPlayerState('maximized');\n        //\n        // console.log(\"maximizing here yar and state is\", playerState);\n      }\n\n      setTimeout(() => {\n        setIsNextFromMini(false);\n        // change it back to false\n      }, 200);\n\n      setAudioState('loading');\n      const res = await getAudioLink.get('/song', {\n        params: { id: data },\n      });\n\n      // set the audio data\n      const proxyURL = 'https://server.ylight.xyz/proxy/';\n      audioPlayer.current.src = res.data;\n      playAudio();\n\n      // var audioContext = new AudioContext();\n\n      // var track = audioContext.createMediaElementSource(audioPlayer.current);\n      // track.connect(audioContext.destination);\n    };\n\n    if (currentVideoSnippet.audio) {\n      // console.log(\"yes its downloaded we will play from local file\");\n      // maximize the player every time id changes\n\n      setPlayerState('maximized');\n      setAudioState('loading');\n      audioPlayer.current.src = window.URL.createObjectURL(\n        currentVideoSnippet.audio\n      );\n      playAudio();\n    } else if (currentVideoSnippet.id) {\n      getAudio(currentVideoSnippet.id);\n    }\n\n    if (currentVideoSnippet.id) {\n      const searchRelated = async () => {\n        const res = await youtubeSearch.get('/search', {\n          params: {\n            relatedToVideoId: currentVideoSnippet.id,\n            maxResults: 10,\n          },\n        });\n        setRelatedVideos(res.data.items);\n      };\n\n      // if its not from the mini next button then only change history\n      if (!isNextFromMini) {\n        // if the click is not from playlist then only we will search for realated video\n        if (!isItFromPlaylist) {\n          // // console.log(\"searching for related vids\", relatedVideos);\n          // if player is in playlist mode we will just replace history else push it\n          if (location.pathname !== '/play') {\n            // prevent duplicating history\n            history.push(`/play?id=${currentVideoSnippet.id}`);\n          }\n\n          searchRelated();\n        } else {\n          history.replace(`/play?id=${currentVideoSnippet.id}`);\n          setIsItFromPlaylist(false);\n        }\n      }\n\n      // console.log(currentVideoSnippet);\n    }\n\n    // set rating to none when we load new song\n    setRating('none');\n  }, [currentVideoSnippet, setIsItFromPlaylist]);\n\n  // useEffect(() => {\n  //   // console.log(\"from playlist\", isItFromPlaylist);\n  // }, [isItFromPlaylist]);\n\n  useEffect(() => {\n    relatedVideosVar = relatedVideos;\n    // console.log(\"related\", relatedVideos);\n  }, [relatedVideos]);\n\n  useEffect(() => {\n    // console.log(\"isnext state\", isNextFromMini);\n  }, [isNextFromMini]);\n\n  const setAudioSrcAndPlay = async (id) => {\n    const res = await getAudioLink.get('/song', {\n      params: { id: id },\n    });\n\n    // set the audio data\n    audioPlayer.current.src = res.data;\n    playAudio();\n  };\n\n  const setVideoSnippet = (video) => {\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/hqdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`,\n      // this is the url of the max resolution of thumbnail\n    });\n\n    // if window is minimized then only we will run this function\n    if (document.hidden) {\n      setAudioSrcAndPlay(video.id.videoId);\n    }\n  };\n\n  const playNext = () => {\n    // also set this is from playlist\n    setIsItFromPlaylist(true);\n    // console.log(\"play next related videos\", relatedVideos);\n    // find the index of playing song in the playlist\n    const currentIndex = relatedVideosVar.findIndex(\n      (video) => video.id.videoId === currentVideoSnippet.id\n    );\n    // console.log(\"the current index is\", currentIndex);\n\n    let video;\n    // console.log(\"hey we will play next song\");\n    video = relatedVideosVar[currentIndex + 1]; //we will play the next song\n\n    setVideoSnippet(video);\n  };\n\n  const playPrevious = () => {\n    setIsItFromPlaylist(true);\n\n    // if the player time is greater than 5 sec we will move the time to 0\n    if (player.currentTime > 5) {\n      player.currentTime = 0;\n    } else {\n      const currentIndex = relatedVideosVar.findIndex(\n        (video) => video.id.videoId === currentVideoSnippet.id\n      );\n      let video;\n      if (currentIndex !== -1) {\n        video = relatedVideosVar[currentIndex - 1]; //we will play the next song\n        setVideoSnippet(video);\n      } else {\n        player.currentTime = 0;\n      }\n    }\n  };\n\n  let playerStyle = {\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    background: '#fff',\n    width: '100%',\n    height: '100%',\n    zIndex: 1400,\n    display: 'inline block',\n    transition: 'all .3s ease',\n  };\n\n  if (playerState === 'minimized') {\n    playerStyle.transform = 'translateY(calc(100% - 106px))';\n    playerStyle.zIndex = 0;\n    // if theme is not dark then only apply the pink style\n    if (themeSelectValue === 'Dark') {\n      playerStyle.background = '#333';\n    } else {\n      playerStyle.background = '#e91e63';\n    }\n    // playerStyle.bottom = \"48px\";\n    // calculate the top height and we are subtracting 148px becz\n    // 48 is the value of menu bar and 100px is minimized height\n    // make body overflow scroll 😝\n    body.style.overflow = 'auto';\n  }\n\n  if (playerState === 'maximized') {\n    // make body overflow hidden 🙈\n    body.style.overflow = 'hidden';\n    if (themeSelectValue === 'Dark') {\n      playerStyle.background = '#333';\n    }\n  }\n\n  if (playerState === 'playlist') {\n    playerStyle.transform = 'translateY(-418px)';\n  }\n\n  const expandPlayer = () => {\n    if (playerState === 'minimized') {\n      setPlayerState('maximized');\n      setMinimized(true);\n      history.push({\n        pathname: '/play',\n        search: `?id=${currentVideoSnippet.id}`,\n        state: { modal: true },\n      });\n    }\n  };\n\n  const toggleMaxPlaylist = () => {\n    if (playerState === 'playlist') {\n      setPlayerState('maximized');\n    } else {\n      setPlayerState('playlist');\n    }\n    // console.log(\"Maximize the playlist\");\n  };\n\n  const updateSongDB = async () => {\n    const rating = await updatePlayingSong(currentVideoSnippet);\n    //  it will update song on db and return the rating\n    setRating(rating);\n    // console.log(rating);\n  };\n\n  // this will be fired when song is ended\n  const songEnded = () => {\n    // if repeat is false we will play next else just set the time to 0\n    if (!isRepeatOn) {\n      playNext();\n    } else {\n      audioPlayer.current.currentTime = 0;\n      playAudio();\n    }\n  };\n\n  let initPosition = 0;\n  const containerRef = useRef(null);\n\n  const swipeHandlerMaximized = useSwipeable({\n    onSwipedDown: (e) => {\n      setPlayerState('minimized');\n      history.goBack();\n    },\n    onSwiping: (e) => {\n      // // console.log(e);\n      // getting the event for touches to extract the position\n      if (initPosition === 0) {\n        initPosition = e.event.changedTouches[0].screenY;\n      }\n\n      const screenY = e.event.changedTouches[0].screenY;\n      let positionDifference = Math.round(screenY - initPosition);\n      if (positionDifference < 1) {\n        positionDifference = 0;\n      }\n\n      const containerRefStyle = containerRef.current.style;\n      containerRefStyle.transform = `translateY(${positionDifference}px)`;\n      containerRefStyle.transition = 'none';\n    },\n    onSwiped: (e) => {\n      initPosition = 0;\n      containerRef.current.style = '';\n      // we will make the initial position 0 again after user leaves the screen\n    },\n    onSwipedUp: (e) => {\n      if (playerState === 'minimized') {\n        setPlayerState('maximized');\n      }\n    },\n    onSwipedRight: (e) => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playNext();\n      }, 250);\n    },\n    onSwipedLeft: (e) => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playPrevious();\n      }, 250);\n    },\n  });\n\n  const swipeHandlerMin = useSwipeable({\n    onSwipedUp: (e) => {\n      expandPlayer();\n    },\n  });\n\n  useEffect(() => {\n    if (location.pathname === '/play' && !currentVideoSnippet.id) {\n      // console.log(\"history is in play fetching song\");\n\n      fetchAndSetCurrentVideoSnippet(params.get('id')); // math will give the song id from\n    }\n    // we will only change if its push  otherwise while changing song from playlist changes the state\n\n    // Listen for changes to the current location.\n    const unlisten = history.listen((location) => {\n      // location is an object like window.location\n      if (location.pathname === '/play') {\n        // we will only change if its push  otherwise while changing song from playlist changes the state\n        if (history.action !== 'REPLACE') {\n          setPlayerState('maximized');\n          // console.log(\"set player state to maximized\");\n        }\n      } else {\n        setPlayerState('minimized');\n        // console.log(\"set player state to minimized\");\n      }\n      // console.log(history);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    // console.log(playerState);\n  }, [playerState]);\n\n  const returnMinMaxClass = () => {\n    if (playerState === 'minimized') {\n      return 'playerMinimized';\n    } else if (playerState === 'playlist') {\n      return 'playerPlaylist';\n    }\n  };\n\n  const returnMaximizedPlayer = () => {\n    if (playerState === 'maximized' || playerState === 'playlist') {\n      return (\n        <>\n          <Grid\n            container\n            direction=\"column\"\n            className=\"main-player-inner\"\n            style={{\n              height: ' calc(100vh - 46px)',\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <TopBar\n              song={currentVideoSnippet}\n              player={player}\n              setPlayerState={setPlayerState}\n              history={history}\n            />\n            <div {...swipeHandlerMaximized} className=\"musicArtContainer\">\n              <MusicArt\n                data={currentVideoSnippet}\n                rating={rating}\n                audioEl={player}\n              />\n            </div>\n            <TimelineController audioState={audioState} player={player} />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ maxWidth: '290px', height: '80px', margin: '0 auto' }}\n            >\n              <PreviousButton playPrevious={playPrevious} />\n              <PlayPauseButton player={player} audioState={audioState} />\n              <NextButton onPlayNext={playNext} />\n            </Grid>\n          </Grid>\n          <RelatedVideos\n            toggleMaxPlaylist={toggleMaxPlaylist}\n            setPlaylist={() => setIsItFromPlaylist(true)}\n            playerState={playerState}\n            relatedVideos={relatedVideos}\n            setRelatedVideos={(data) => setRelatedVideos(data)}\n            isRepeatOn={isRepeatOn}\n            // this will set the repeat setting\n            setIsRepeatOn={() => {\n              setIsRepeatOn(!isRepeatOn);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  const returnMinimizedPlayer = () => {\n    if (playerState === 'minimized' && currentVideoSnippet.id) {\n      return (\n        <div {...swipeHandlerMin}>\n          <MiniMusicArt\n            // we are making an object for props we will pass it to play pause button through mini music art\n            playPause={{\n              player: player,\n              minimized: minimized,\n              audioState: audioState,\n            }}\n            playNext={(e) => {\n              e.stopPropagation();\n              setIsNextFromMini(true);\n              playNext();\n            }}\n            data={currentVideoSnippet}\n            emptyPlayer={(e) => {\n              e.stopPropagation();\n              setCurrentVideoSnippet([]);\n            }}\n          />\n          <TimelineController\n            audioState={audioState}\n            player={player}\n            minimized={minimized}\n          />\n        </div>\n      );\n    }\n  };\n\n  const fetchAndSetCurrentVideoSnippet = (id) => {\n    youtubeSearch\n      .get('videos', {\n        params: {\n          id: id,\n        },\n      })\n      .then((res) => {\n        const item = res.data.items[0];\n        // console.log(currentVideoSnippet);\n        setCurrentVideoSnippet({\n          id: item.id,\n          title: item.snippet.title,\n          channelTitle: item.snippet.channelTitle,\n          maxThumbnail: `https://img.youtube.com/vi/${item.id}/maxresdefault.jpg`,\n          sdThumbnail: `https://img.youtube.com/vi/${item.id}/sddefault.jpg`,\n          // this is the url of the max resolution of thumbnail\n        });\n      });\n  };\n\n  if (!currentVideoSnippet.id) {\n    return null;\n  }\n\n  return (\n    <div\n      // drag=\"y\"\n      // dragConstraints={{ top: 0, bottom: 600 }}\n      ref={containerRef}\n      // style={playerStyle}\n      onClick={expandPlayer}\n      className={'mediaPlayerContainer ' + returnMinMaxClass()}\n    >\n      {returnMaximizedPlayer()}\n      {returnMinimizedPlayer()}\n      <audio\n        // onTimeUpdate={timeUpdate}\n        onLoadStart={() => {\n          setAudioState('loading');\n        }}\n        id=\"audio-element\"\n        onLoadedData={updateSongDB}\n        // crossOrigin=\"anonymous\"\n        onPlay={() => setAudioState('playing')}\n        onPlaying={() => setAudioState('playing')}\n        onPause={() => setAudioState('paused')}\n        onEnded={songEnded}\n        autoPlay\n        ref={audioPlayer}\n        // type=\"audio/mp4\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlayer;\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  Suspense,\n  lazy,\n} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Link,\n  Switch,\n} from 'react-router-dom';\n\nimport { AnimatePresence } from 'framer-motion';\nimport {\n  Tabs,\n  Tab,\n  withStyles,\n  Grid,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport {\n  Home,\n  Favorite,\n  VideoLibrary,\n  History,\n  GetApp,\n} from '@material-ui/icons/';\n\nimport { GlobalContext } from './GlobalState';\nimport {\n  getHistory,\n  getLikedSongs,\n  getDownloadedSongs,\n  removeDownloadingState,\n  db,\n} from '../external/saveSong';\n\nimport SettingsPage from './sections/SettingsPage';\n// import the db from save song\nimport MainPlayer from '../components/player/MainPlayer';\n// pages\nconst LoginPage = lazy(() => import('./LoginPage'));\nconst RenderDatabase = lazy(() => import('./RenderDatabase'));\nconst SearchResult = lazy(() => import('./SearchResult'));\nconst HomePage = lazy(() => import('./sections/HomePage'));\nconst FeedbackForm = lazy(() => import('./sections/FeedbackForm'));\nconst PrivacyPage = lazy(() => import('./sections/PrivacyPage'));\nconst DonatePage = lazy(() => import('./sections/DonatePage'));\nconst ContributorsPage = lazy(() => import('./sections/ContributorsPage'));\n\n// custom styling the tab menus\nconst CustomTab = withStyles({\n  root: {\n    background: '#e91e63',\n    position: 'fixed',\n    bottom: '0',\n    padding: 0,\n    width: '100%',\n    zIndex: 1300,\n  },\n  indicator: {\n    display: 'none',\n  },\n  labelIcon: {\n    margin: 0,\n  },\n})(Tabs);\n\nconst CustomTabs = withStyles({\n  root: {\n    color: '#FFB2C1',\n    fontSize: '.75rem',\n    margin: 0,\n\n    '&:hover': {\n      color: '#ffffffed',\n      opacity: 1,\n    },\n    '&$selected': {\n      color: '#fff',\n    },\n    '&:focus': {\n      color: '#FFFFFF',\n    },\n  },\n\n  selected: {},\n})(Tab);\n\nlet deferredPrompt = undefined;\nlet previousLocation;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n});\n\nconst CurrentSection = ({ history, location }) => {\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\n  // console.log(currentVideoSnippet);\n\n  const [songsHistoryState, setSongsHistory] = useState([]);\n  const [songsLikedState, setSongsLiked] = useState([]);\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [redirectState, setRedirectState] = useState(null);\n\n  const circularLoader = (\n    <Grid\n      style={{ height: '100vh' }}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n\n  function handleChange(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  const fetchSongs = useCallback(async () => {\n    //it's same as the orders of our tabs\n    switch (tabValue) {\n      case 1:\n        setSongsLiked(await getLikedSongs());\n        break;\n\n      case 2:\n        setSongsDownloaded(await getDownloadedSongs());\n        break;\n\n      case 3:\n        setSongsHistory(await getHistory());\n        break;\n\n      default:\n        break;\n    }\n  }, [tabValue]);\n  //\n  useEffect(() => {\n    fetchSongs();\n  }, [tabValue, fetchSongs]);\n\n  useEffect(() => {\n    fetchSongs();\n    // console.log(\"fetching the songs\");\n  }, [updateCount, fetchSongs]);\n\n  useEffect(() => {\n    db.on('changes', () => {\n      setUpdateCount((c) => c + 1);\n    });\n    // will remove all the songs which are downloading in the first place\n    removeDownloadingState();\n\n    const isThisNewUser = localStorage.getItem('isThisNew');\n    if (isThisNewUser === 'no') {\n      setRedirectState(true);\n    }\n    // if this is not a new user redirect it to home\n    previousLocation = location;\n    history.listen((location) => {\n      if (location.pathname !== '/play') {\n        previousLocation = location;\n        // console.log(previousLocation);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    // we will redirect everytime user comes to root page\n    if (redirectState && history.location.pathname === '/') {\n      history.replace('/home');\n    }\n\n    // if the location is not play then we will push new location\n  }, [setRedirectState, history, redirectState]);\n\n  const checkPrevLocation = () => {\n    if (location.pathname === '/play') {\n      return previousLocation;\n    } else {\n      return location;\n    }\n  };\n\n  // we will load the homepage with all the playlists\n  const continueToHome = () => {\n    localStorage.setItem('isThisNew', 'no');\n    history.replace('/home');\n\n    if (deferredPrompt) {\n      // show the prompt to install app\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          // console.log(\"User accepted the A2HS prompt\");\n        } else {\n          // console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    }\n  };\n\n  const returnMainPlayer = (props) => {\n    // we will return the main player if the path is not the \"/\"\n\n    if (window.location.pathname !== '/') {\n      return <MainPlayer {...props} />;\n    } else {\n      return null;\n    }\n  };\n\n  // the set tab value will keep the tab active on their route\n  // there are 4 tabs so there will be 3 indexes\n  return (\n    <div>\n      <Suspense fallback={circularLoader}>\n        <Switch location={checkPrevLocation()}>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => {\n              return <LoginPage continueToHome={continueToHome} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={(props) => <SearchResult videos={searchResult} />}\n          />\n          <Route\n            path=\"/home\"\n            render={(props) => {\n              setTabValue(0);\n              return <HomePage />;\n            }}\n          />\n          <Route\n            path=\"/liked\"\n            render={(props) => {\n              setTabValue(1);\n              return (\n                <RenderDatabase\n                  songs={songsLikedState}\n                  {...props}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/downloads\"\n            render={(props) => {\n              setTabValue(2);\n              return (\n                <RenderDatabase\n                  songs={songsDownloadedState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/history\"\n            render={(props) => {\n              setTabValue(3);\n              return (\n                <RenderDatabase\n                  songs={songsHistoryState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/app\"\n            render={(props) => {\n              window.location.replace(\n                'https://play.google.com/store/apps/details?id=com.ylightmusic.app'\n              );\n              return <div>Redirecting you to play store</div>;\n            }}\n          />\n\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path=\"/privacy\" component={PrivacyPage} />\n\n          <Route path=\"/feedback\" component={FeedbackForm} />\n          <Route path=\"/donate\" component={DonatePage} />\n          <Route path=\"/contributors\" component={ContributorsPage} />\n        </Switch>\n        <Route path=\"/\" render={(props) => returnMainPlayer(props)} />\n\n        <div style={{ height: currentVideoSnippet.id ? '100px' : '50px' }} />\n      </Suspense>\n      {/* if the player is on then return 100px else 50px*/}\n      <CustomTab\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <CustomTabs\n          icon={<Home />}\n          aria-label=\"Home\"\n          component={Link}\n          to=\"/home\"\n          label=\"Home\"\n        />\n\n        <CustomTabs\n          icon={<Favorite />}\n          aria-label=\"Liked\"\n          component={Link}\n          to=\"/liked\"\n          label=\"Liked\"\n        />\n\n        <CustomTabs\n          icon={<GetApp />}\n          aria-label=\"Downloads\"\n          component={Link}\n          to=\"/downloads\"\n          label=\"Downloads\"\n        />\n        <CustomTabs\n          icon={<History />}\n          aria-label=\"History\"\n          component={Link}\n          to=\"/history\"\n          label=\"History\"\n        />\n      </CustomTab>\n    </div>\n  );\n};\n\nexport default withRouter(CurrentSection);\n","export default __webpack_public_path__ + \"static/media/moon-solid.cf7a6d04.svg\";","export default __webpack_public_path__ + \"static/media/sun-solid.1cf7793f.svg\";","import React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport {\n  SwipeableDrawer,\n  Avatar,\n  Divider,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link as MaterialLink\n} from \"@material-ui/core\";\n\nimport {\n  AccountCircle,\n  Feedback,\n  Info,\n  FreeBreakfast,\n  People,\n  Settings\n} from \"@material-ui/icons\";\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport \"./darkMode.css\";\nimport moon from \"../images/moon-solid.svg\";\nimport sun from \"../images/sun-solid.svg\";\n\nconst SwipeMenu = () => {\n  const [{ menuOpen, themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [isNight, setIsNight] = useState(false);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      setIsNight(true);\n    } else {\n      setIsNight(false);\n    }\n  }, [themeSelectValue]);\n\n  const changeTheme = theme => {\n    setThemeSelectValue(theme);\n    localStorage.setItem(\"selectedTheme\", theme);\n  };\n\n  const handleThemeToggle = () => {\n    if (!isNight) {\n      changeTheme(\"Dark\");\n      setIsNight(false);\n    } else {\n      changeTheme(\"Default\");\n      setIsNight(true);\n    }\n  };\n\n  return (\n    <SwipeableDrawer\n      open={menuOpen}\n      onClose={() => setMenuOpen(false)}\n      onOpen={() => setMenuOpen(true)}\n    >\n      <div style={{ width: \"300px\" }}>\n        <div\n          style={{\n            margin: \"35px\",\n            position: \"relative\",\n            width: \"30px\",\n            height: \"30px\"\n          }}\n        >\n          <AnimatePresence>\n            <motion.img\n              key={isNight ? sun : moon}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1.5, rotate: \"360deg\" }}\n              exit={{ scale: 0 }}\n              // transition={{ duration: 0.5 }}\n              src={isNight ? sun : moon}\n              onClick={() => handleThemeToggle()}\n              className=\"dayNightToggleBtn\"\n              alt=\"sun moon icon\"\n            />\n          </AnimatePresence>\n        </div>\n\n        <Divider />\n\n        <List\n          component=\"nav\"\n          className={\"pinkLists\"}\n          onClick={() => setMenuOpen(false)}\n        >\n          <ListItem button component={Link} to=\"/settings\">\n            <ListItemIcon>\n              <Settings />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/feedback\">\n            <ListItemIcon>\n              <Feedback />\n            </ListItemIcon>\n            <ListItemText primary=\"Feedback\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/donate\">\n            <ListItemIcon>\n              <FreeBreakfast />\n            </ListItemIcon>\n            <ListItemText primary=\"Donate & Support\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/contributors\">\n            <ListItemIcon>\n              <People />\n            </ListItemIcon>\n            <ListItemText primary=\"Contributors\" />\n          </ListItem>\n          <ListItem\n            button\n            component={MaterialLink}\n            target=\"blank\"\n            href=\"https://github.com/ShivamJoker/Ylight-Music-Client\"\n          >\n            <ListItemIcon>\n              <svg\n                width=\"24\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fab\"\n                data-icon=\"github\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 496 512\"\n                fill=\"#e91e63\"\n              >\n                <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n              </svg>\n            </ListItemIcon>\n            <ListItemText primary=\"Github\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/privacy\">\n            <ListItemIcon>\n              <Info />\n            </ListItemIcon>\n            <ListItemText primary=\"Privacy & Policy\" />\n          </ListItem>\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\nexport default SwipeMenu;\n","import React, { useContext, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  FormGroup,\n  FormControlLabel,\n  Box,\n  Typography,\n} from '@material-ui/core';\n\nimport { GlobalContext } from '../GlobalState';\n\nexport const useCheckDarkmode = () => {\n  const [, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    (data) => {\n      dispatch({ type: 'setThemeSelectValue', snippet: data });\n    },\n    [dispatch]\n  );\n  const checkDarkMode = () => {\n    const selectedTheme = localStorage.getItem('selectedTheme');\n\n    // we will check if system dark mode is enabled or not\n\n    const colorScheme = window.matchMedia('(prefers-color-scheme: dark)');\n    colorScheme.addEventListener('change', (e) => {\n      if (e.matches) {\n        // if it matches we will set it to dark else default\n        setThemeSelectValue('Dark');\n      } else {\n        setThemeSelectValue('Default');\n      }\n    });\n    if (selectedTheme) {\n      // console.log(selectedTheme);\n      setThemeSelectValue(selectedTheme);\n\n      const date = new Date();\n      const hrs = date.getHours();\n\n      // if the theme is auto then only do it\n      if (selectedTheme === 'Auto') {\n        if (hrs >= 18 || hrs <= 6) {\n          setThemeSelectValue('Dark');\n        } else {\n          setThemeSelectValue('Default');\n        }\n      }\n    }\n  };\n\n  return { checkDarkMode };\n};\n\nconst SettingsPage = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    (data) => {\n      dispatch({ type: 'setThemeSelectValue', snippet: data });\n    },\n    [dispatch]\n  );\n  const handleThemeChange = (e) => {\n    setThemeSelectValue(e.target.value);\n    localStorage.setItem('selectedTheme', e.target.value);\n  };\n\n  useEffect(() => {\n    // console.log(themeSelectValue);\n  }, [themeSelectValue]);\n\n  const selectComp = (\n    <Box m={1}>\n      <Select\n        value={themeSelectValue}\n        onChange={handleThemeChange}\n        displayEmpty\n        name=\"age\"\n      >\n        <MenuItem value=\"Default\">Default</MenuItem>\n        <MenuItem value=\"Dark\">Dark</MenuItem>\n        <MenuItem value=\"Auto\">Auto</MenuItem>\n      </Select>\n    </Box>\n  );\n  return (\n    <Container>\n      <br />\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Settings\n      </Typography>\n      <FormControl component=\"fieldset\">\n        <FormGroup row>\n          <FormControlLabel\n            labelPlacement=\"start\"\n            label=\"Select Theme \"\n            value=\"top\"\n            control={selectComp}\n          />\n        </FormGroup>\n      </FormControl>\n    </Container>\n  );\n};\nexport default SettingsPage;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport MainPlayer from \"./player/MainPlayer\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport CurrentSection from \"./CurrentSection\";\nimport SnackbarMessage from \"./SnackbarMessage\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink } from \"@material-ui/core/colors\";\n\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\n\nconst body = document.querySelector(\"body\");\n\nconst defaultTheme = {\n  palette: {\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst AppContainer = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const { checkDarkMode } = useCheckDarkmode();\n\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\";\n      // this is to disable pull refresh on android\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n\n  return (\n    <MuiThemeProvider\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\n    >\n      <Router>\n        <SimpleAppBar />\n        <Route component={CurrentSection} />\n\n        <SwipeMenu />\n      </Router>\n       \n    </MuiThemeProvider>\n  );\n};\nexport default AppContainer;\n","import React from \"react\";\n\nimport \"typeface-roboto\";\nimport { GlobalState } from \"./GlobalState\";\nimport AppContainer from \"./AppContainer\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <AppContainer />\n    </GlobalState>\n  );\n}\n\nexport default App;\n\n// this do not works","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n","import React, { useReducer } from \"react\";\n\nexport const GlobalContext = React.createContext();\n\nconst initialState = {\n  searchState: \"home\",\n  searchResult: [],\n  relatedVideos: [],\n  menuOpen: false,\n  snackbarMsg: false,\n  currentVideoSnippet: {},\n  themeSelectValue: \"Default\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setCurrentVideoSnippet\":\n      return {\n        ...state,\n        currentVideoSnippet: action.snippet\n      };\n\n    case \"setRelatedVideos\": {\n      return {\n        ...state,\n        relatedVideos: action.snippet\n      };\n    }\n    case \"setSnackbarMsg\": {\n      return {\n        ...state,\n        snackbarMsg: action.snippet\n      };\n    }\n    case \"setThemeSelectValue\": {\n      return {\n        ...state,\n        themeSelectValue: action.snippet\n      };\n    }\n    case \"setSearchState\": {\n      return {\n        ...state,\n        searchState: action.snippet\n      };\n    }\n    case \"setSearchResult\": {\n      return {\n        ...state,\n        searchResult: action.snippet\n      };\n    }\n    case \"setMenuOpen\": {\n      return {\n        ...state,\n        menuOpen: action.snippet\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const GlobalState = props => {\n  const globalState = useReducer(reducer, initialState);\n  return (\n    <GlobalContext.Provider value={globalState}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import Dexie from 'dexie';\nimport 'dexie-observable';\nimport { promised } from 'q';\nimport { promises } from 'fs';\n\n// Define your database\nexport const db = new Dexie('Song_Database');\n\n// create new databse\n// our schema is of storing a song\ndb.version(1).stores({\n  songs:\n    '&videoId, timestamp, playbackTimes, [rating+timestamp], [downloadState+timestamp]',\n});\n\ndb.version(2).stores({});\n\n// add or update song on play\nexport const updatePlayingSong = async (data) => {\n  const videoObj = {\n    videoId: data.id,\n    timestamp: Date.now(),\n    title: data.title,\n    channelTitle: data.channelTitle,\n    playbackTimes: 1,\n  };\n\n  const song = await db.songs.get({ videoId: data.id });\n  // if song exists we will just update the timestamp and the playback\n  if (song) {\n    db.songs.update(data.id, {\n      timestamp: Date.now(),\n      playbackTimes: song.playbackTimes + 1,\n    });\n    // console.log(\"song updated\");\n    return song.rating;\n    // return the rating\n  } else {\n    // we will add a new song\n    // console.log(\"song added\");\n    db.songs.add(videoObj);\n  }\n};\n\n// like or dislike a song on database\nexport const rateSong = async (id, rating) => {\n  // if user likes the song then only download it\n\n  db.songs.update(id, {\n    rating: rating,\n  });\n};\n\nexport const getHistory = async () => {\n  const songsByTimeStamp = await db.songs\n    .orderBy('timestamp')\n    .limit(500)\n    .reverse()\n    .toArray();\n  return songsByTimeStamp;\n};\n\nexport const getLikedSongs = async () => {\n  const likedSongs = await db.songs\n    .where('[rating+timestamp]') //this will filter song based on time and liked\n    .between(['liked', Dexie.minKey], ['liked', Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return likedSongs;\n};\n\nexport const getDownloadedSongs = async () => {\n  const downloadedSongs = await db.songs\n    .where('[downloadState+timestamp]') //this will filter song based on time and downloaded\n    .between(['downloaded', Dexie.minKey], ['downloaded', Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return downloadedSongs;\n};\n\nexport const removeDownloadingState = async () => {\n  // find all the downloadState which is downloading and remove that\n  const songs = await db.songs\n    .where('[downloadState+timestamp]')\n    .between(['downloading', Dexie.minKey], ['downloading', Dexie.maxKey])\n    .modify((x) => {\n      delete x.downloadState;\n    });\n  // console.log(songs);\n};\n\nexport const downloadSong = async (id, url) => {\n  try {\n    db.songs.update(id, {\n      downloadState: 'downloading',\n    });\n    const thumbURL = `https://i.ytimg.com/vi/${id}/hqdefault.jpg`;\n    const [thumbnailBlob, songBlob] = await Promise.all([\n      fetchProxiedBlob(thumbURL),\n      fetchProxiedBlob(url),\n    ]);\n    db.songs.update(id, {\n      downloadState: 'downloaded',\n      thumbnail: thumbnailBlob,\n      audio: songBlob,\n    });\n    return 'downloaded';\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteSongAudio = async (id) => {\n  await db.songs.where({ videoId: id }).modify((x) => {\n    delete x.audio;\n    delete x.downloadState;\n  });\n  return 'song deleted';\n};\n\nfunction fetchProxiedBlob(url) {\n  const URL = url;\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://server.ylight.xyz/proxy/' + URL);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      var status = xhr.status;\n      if (status >= 200 && status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: status,\n          statusText: xhr.statusText,\n        });\n      }\n    };\n    xhr.send();\n    setTimeout(() => {\n      xhr.abort();\n      xhr.open('GET', 'https://server.ylight.xyz/proxy/' + URL);\n\n      xhr.send();\n    }, 1000);\n  });\n}\n","import axios from \"axios\";\n\n// put your api keys in .env file you can get those here - https://developers.google.com/youtube/v3/getting-started\nexport const selectRandomKey = () => {\n  const keys = process.env.REACT_APP_YouTube_Keys.split(\" \"); //we are splitting the api keys to make an array\n  const random = Math.floor(Math.random() * Math.floor(keys.length)); //this will get a random number\n  return keys[random];\n};\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: {\n    part: \"snippet\",\n    videoCategoryId: \"10\",\n    type: \"video\",\n    key: selectRandomKey()\n  }\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://server.ylight.xyz',\n  // baseURL: 'https://ylight.glitch.me',\n});\n"],"sourceRoot":""}